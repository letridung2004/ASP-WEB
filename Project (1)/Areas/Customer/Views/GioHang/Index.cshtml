

@model GioHangViewModel   

<style>

        input[type="text"] {
            width: 60px;
        }
    </style>
    <div class="container my-5">
        <div class="row">
            <!-- Giỏ hàng -->
            <div class="col-md-8">
                <h2 class="mb-4">Giỏ hàng của bạn</h2>
                <div class="table-responsive">
                    <table class="table table-bordered text-center">
                        <thead class="table-light">
                            <tr>
                                <th>STT</th>
                                <th>Tên sản phẩm</th>
                                <th>Hình ảnh</th>
                                <th>Giá tiền</th>
                                <th>Số lượng</th>
                                <th>Thành tiền</th>
                                <th>Hành động</th>
                            </tr>
                        </thead>                     
                            @foreach (var item in Model.DsGioHang)
                            {
                            <tr data-price="500000">
                                <td>1</td>
                                <td>@item.SanPham.Name</td>
                                <td><img src="@item.SanPham.ImageUrl" alt="Sản phẩm A" class="img-fluid" width="100"></td>
                                <td>@item.SanPham.price</td>
                                <td>
                                    <div class="d-flex justify-content-center align-items-center">
                                    <a asp-action="Giam" asp-route-giohangId="@item.Id" class="btn btn-sm btn-outline-secondary minus">-</a>
                                        <input asp-for="@item.Quantity" type="text" class="form-control text-center quantity mx-2" readonly>
                                        <a asp-action="Tang" asp-route-giohangId="@item.Id" class="btn btn-sm btn-outline-secondary plus">+</a>
                                    </div>
                                </td>
                                <td class="item-total">@item.ProductPrice.ToString("N0"))</td>
                                <td>
                                    <a asp-action="Xoa" asp-route-giohangId="@item.Id" class="btn btn-sm btn-danger remove">Xóa</a>
                                </td>
                            </tr>
                            }
                    </table>
                </div>
            </div>

            <!-- Panel Thanh toán -->
            <div class="col-md-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Thông tin thanh toán</h5>

                        <!-- Tổng cộng -->
                    <p><strong>Tổng cộng:</strong> <span id="cart-total"><b>@(string.Format("{0:N0}", Model.HoaDon.Total)) đ</span></b></p>

                        <!-- Phương thức thanh toán -->
                        <h6>Phương thức thanh toán</h6>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="paymentMethod" id="paymentCOD" checked>
                            <label class="form-check-label" for="paymentCOD">

                                Thanh toán khi nhận hàng (COD)
                            </label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="paymentMethod" id="paymentCard">
                            <label class="form-check-label" for="paymentCard">

                                Thanh toán qua thẻ ngân hàng
                            </label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="paymentMethod" id="paymentEwallet">
                            <label class="form-check-label" for="paymentEwallet">

                                Thanh toán qua ví điện tử
                            </label>
                        </div>

                        <!-- Mã giảm giá -->
                        <div class="input-group mt-3">
                            <input type="text" class="form-control" placeholder="Nhập mã giảm giá">
                            <button class="btn btn-outline-secondary" type="button">Áp dụng</button>
                        </div>

                        <!-- Nút đặt hàng -->
                        <a class="btn btn-success mt-3 w-100" asp-action="ThanhToan">Đặt hàng</a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>

       
    </script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script></html>
<style>
    #chatBox {
        position: fixed;
        bottom: 20px;
        right: 20px;
        width: 300px;
        background-color: white;
        border: 1px solid #ccc;
        padding: 10px;
        box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.2);
    }

    #messagesList {
        max-height: 200px;
        overflow-y: auto;
        margin-bottom: 10px;
    }

    #userInput, #messageInput {
        width: calc(100% - 22px);
        margin-bottom: 5px;
    }

    button {
        width: 100%;
    }
</style>


<div id="chatBox">
    <div id="messagesList"></div>
    <input type="text" id="userInput" placeholder="Tên của bạn" />
    <input type="text" id="messageInput" placeholder="Nhập tin nhắn..." />
    <button onclick="sendMessage()">Gửi</button>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.9/signalr.min.js"></script>
<script>
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/chathub")
        .build();

    connection.start().catch(err => console.error(err.toString()));

    connection.on("ReceiveMessage", (user, message) => {
        const msg = document.createElement("div");
        msg.textContent = `${user}: ${message}`;
        document.getElementById("messagesList").appendChild(msg);
    });

    function sendMessage() {
        const user = document.getElementById("userInput").value;
        const message = document.getElementById("messageInput").value;
        connection.invoke("SendMessage", user, message).catch(err => console.error(err.toString()));
    }
</script>

